// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth Modules"
                ],
                "summary": "Account Login",
                "parameters": [
                    {
                        "description": "params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Currently only supports email login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth Modules"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.Response"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a paginated list of categories with optional search and sorting criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories Modules"
                ],
                "summary": "Get list of categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by category name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "active",
                            "deactive"
                        ],
                        "type": "string",
                        "example": "\"active\"",
                        "description": "Filter by Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "created_at"
                        ],
                        "type": "string",
                        "default": "created_at",
                        "example": "\"name\"",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "example": "\"asc\"",
                        "description": "Sort order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number (must be \u003e= 1)",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 10,
                        "description": "Items per page (between 10-100)",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a list of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.SearchCategoryResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new category with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories Modules"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.Response"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve detailed information about a category by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories Modules"
                ],
                "summary": "Get category details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.GetCategoryDetailResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of products with optional filters, sorting, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Modules"
                ],
                "summary": "Search and filter products",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"PROD-202401-001\"",
                        "description": "Filter by Product Reference",
                        "name": "reference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Crunchy Munch\"",
                        "description": "Filter by Product Name (3-100 chars)",
                        "name": "product_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "description": "Filter by Category ID (must be \u003e 0)",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "description": "Filter by Supplier ID (must be \u003e 0)",
                        "name": "supplier_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "description": "Filter by Stock Location ID (must be \u003e 0)",
                        "name": "stock_location_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 100000,
                        "description": "Filter by Minimum Price (must be \u003e 0)",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 500000,
                        "description": "Filter by Maximum Price (must be \u003e 0)",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "example": "\"2024-01-28\"",
                        "description": "Filter by start date (YYYY-MM-DD)",
                        "name": "date_added_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "example": "\"2024-01-28\"",
                        "description": "Filter by end date (YYYY-MM-DD)",
                        "name": "date_added_to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Available",
                            "Out of Stock",
                            "On Order"
                        ],
                        "type": "string",
                        "example": "\"Available\"",
                        "description": "Filter by Product Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "price",
                            "name",
                            "added_date"
                        ],
                        "type": "string",
                        "default": "added_date",
                        "example": "\"price\"",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "example": "\"asc\"",
                        "description": "Sort order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number (must be \u003e= 1)",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 10,
                        "description": "Items per page (between 10-100)",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.SearchProductResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new product with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Modules"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.Response"
                        }
                    }
                }
            }
        },
        "/products/distance/ip/{city}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Computes the distance (in km) between the user's location (determined via IP) and a specified city.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Modules"
                ],
                "summary": "Calculate the distance between an IP address and a city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City name to compare distance with",
                        "name": "city",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the calculated distance in kilometers",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/products/export/{format}/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Exports product details in the specified format (currently supports PDF).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "Product Modules"
                ],
                "summary": "Export a single product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export format (e.g., 'pdf')",
                        "name": "format",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File generated successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.Response"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve detailed product information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Modules"
                ],
                "summary": "Get product detail information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Reference ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.GetProductDetailData"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update product details using the product reference (ID) provided in the URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Modules"
                ],
                "summary": "Update a product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Reference ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Product Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Permanently deletes a product using the provided product reference (ID) in the URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Modules"
                ],
                "summary": "Delete a product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Reference ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/statistics/products-per-category": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve statistics on the distribution of products per category based on quantity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get percentage of products per category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.ProductCategoryStatsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/statistics/products-per-supplier": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve statistics on the distribution of products per supplier based on quantity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get percentage of products per supplier",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.ProductSupplierStatsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/supplier": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a paginated list of suppliers with optional search and sorting criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier Modules"
                ],
                "summary": "Get list of suppliers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by supplier name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "id"
                        ],
                        "type": "string",
                        "default": "name",
                        "example": "\"name\"",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "example": "\"asc\"",
                        "description": "Sort order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "Page number (must be \u003e= 1)",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "example": 10,
                        "description": "Items per page (between 10-100)",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a list of suppliers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.SearchSupplierResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new supplier with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier Modules"
                ],
                "summary": "Create a new supplier",
                "parameters": [
                    {
                        "description": "Supplier creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.CreateSupplierRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Supplier created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.Response"
                        }
                    }
                }
            }
        },
        "/supplier/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve detailed information about a supplier by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier Modules"
                ],
                "summary": "Get supplier details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.GetSupplierDetailResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Modules"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.GetProfileResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Modules"
                ],
                "summary": "Modify user information",
                "parameters": [
                    {
                        "description": "params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_quydmfl_niveau-test_api_v1.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Crunchy Munch"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "deactive"
                    ],
                    "example": "active"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.CreateProductRequest": {
            "type": "object",
            "required": [
                "category_id",
                "price",
                "product_name",
                "quantity",
                "status",
                "stock_location",
                "supplier_id"
            ],
            "properties": {
                "category_id": {
                    "type": "string",
                    "example": "67389c69-2e78-413a-9d77-6b749520b127"
                },
                "price": {
                    "type": "number",
                    "example": 150000
                },
                "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Crunchy Munch"
                },
                "quantity": {
                    "type": "integer",
                    "example": 10
                },
                "reference": {
                    "type": "string",
                    "example": "PROD-202401-001"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Available",
                        "Out of Stock",
                        "On Order"
                    ],
                    "example": "Available"
                },
                "stock_location": {
                    "type": "string",
                    "example": "Brookstone"
                },
                "supplier_id": {
                    "type": "string",
                    "example": "66ae8b26-a0cd-40d5-8b2d-5127d7b9d817"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.CreateSupplierRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Crunchy Munch"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.GetCategoryDetailData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01"
                },
                "id": {
                    "type": "string",
                    "example": "67389c69-2e78-413a-9d77-6b749520b127"
                },
                "name": {
                    "type": "string",
                    "example": "Food"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.GetCategoryDetailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.GetCategoryDetailData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.GetProductDetailData": {
            "type": "object",
            "properties": {
                "added_date": {
                    "type": "string",
                    "example": "2024-01-28"
                },
                "category": {
                    "type": "string",
                    "example": "Food"
                },
                "price": {
                    "type": "number",
                    "example": 150000
                },
                "product_name": {
                    "type": "string",
                    "example": "Crunchy Munch"
                },
                "quantity": {
                    "type": "integer",
                    "example": 10
                },
                "reference": {
                    "type": "string",
                    "example": "PROD-202401-001"
                },
                "status": {
                    "type": "string",
                    "example": "Available"
                },
                "stock_location": {
                    "type": "string",
                    "example": "Cedar Valley"
                },
                "supplier": {
                    "type": "string",
                    "example": "KFC"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.GetProfileResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.GetProfileResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.GetProfileResponseData": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string",
                    "example": "alan"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.GetSupplierDetailData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "67389c69-2e78-413a-9d77-6b749520b127"
                },
                "name": {
                    "type": "string",
                    "example": "Food"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.GetSupplierDetailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.GetSupplierDetailData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "1234@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_quydmfl_niveau-test_api_v1.LoginResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.LoginResponseData": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.ProductCategoryStatsResponse": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "category_name": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.ProductSupplierStatsResponse": {
            "type": "object",
            "properties": {
                "percentage": {
                    "type": "number"
                },
                "supplier_id": {
                    "type": "string"
                },
                "supplier_name": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "1234@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.SearchCategoryResponse": {
            "type": "object",
            "required": [
                "page",
                "size"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "size": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 10,
                    "example": 10
                },
                "total_pages": {
                    "type": "integer",
                    "example": 10
                },
                "total_rows": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.SearchProductResponse": {
            "type": "object",
            "required": [
                "page",
                "size"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "size": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 10,
                    "example": 10
                },
                "total_pages": {
                    "type": "integer",
                    "example": 10
                },
                "total_rows": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.SearchSupplierResponse": {
            "type": "object",
            "required": [
                "page",
                "size"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "size": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 10,
                    "example": 10
                },
                "total_pages": {
                    "type": "integer",
                    "example": 10
                },
                "total_rows": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.UpdateProductRequest": {
            "type": "object",
            "required": [
                "added_date",
                "category_id",
                "price",
                "product_name",
                "quantity",
                "status",
                "stock_location",
                "supplier_id"
            ],
            "properties": {
                "added_date": {
                    "type": "string",
                    "example": "2024-01-28"
                },
                "category_id": {
                    "type": "string",
                    "example": "67389c69-2e78-413a-9d77-6b749520b127"
                },
                "price": {
                    "type": "number",
                    "example": 150000
                },
                "product_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Crunchy Munch"
                },
                "quantity": {
                    "type": "integer",
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Available",
                        "Out of Stock",
                        "On Order"
                    ],
                    "example": "Available"
                },
                "stock_location": {
                    "type": "string",
                    "example": "Brookstone"
                },
                "supplier_id": {
                    "type": "string",
                    "example": "66ae8b26-a0cd-40d5-8b2d-5127d7b9d817"
                }
            }
        },
        "github_com_quydmfl_niveau-test_api_v1.UpdateProfileRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "1234@gmail.com"
                },
                "nickname": {
                    "type": "string",
                    "example": "alan"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Niveau API",
	Description:      "This is api document.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
